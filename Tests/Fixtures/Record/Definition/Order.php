<?php

namespace Tests\Fixtures\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property ?int $customer_id MySQL type integer
 * @property \Tests\App\Record\Customer $customer related record
 * @property ?int $employee_id MySQL type integer
 * @property \Tests\App\Record\Employee $employee related record
 * @property ?string $notes MySQL type longtext
 * @property string $order_date MySQL type datetime
 * @property int $order_id MySQL type integer
 * @property ?int $order_status_id MySQL type integer
 * @property \Tests\App\Record\OrderStatus $order_status related record
 * @property ?int $order_tax_status_id MySQL type integer
 * @property \Tests\App\Record\OrderTaxStatus $order_tax_status related record
 * @property ?string $paid_date MySQL type datetime
 * @property ?string $payment_type MySQL type varchar(50)
 * @property ?string $ship_address MySQL type longtext
 * @property ?string $ship_city MySQL type varchar(50)
 * @property ?string $ship_country_region MySQL type varchar(50)
 * @property ?string $ship_name MySQL type varchar(50)
 * @property ?string $ship_state_province MySQL type varchar(50)
 * @property ?string $ship_zip_postal_code MySQL type varchar(50)
 * @property ?string $shipped_date MySQL type datetime
 * @property ?int $shipper_id MySQL type integer
 * @property \Tests\App\Record\Shipper $shipper related record
 * @property ?float $shipping_fee MySQL type decimal(19,4)
 * @property ?float $tax_rate MySQL type double
 * @property ?float $taxes MySQL type decimal(19,4)
 */
abstract class Order extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = true;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['order_id', ];

	protected static string $table = 'order';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'customer_id' => new \PHPFUI\ORM\FieldDefinition('integer', 'int', 0, true, null, ),
				'employee_id' => new \PHPFUI\ORM\FieldDefinition('integer', 'int', 0, true, null, ),
				'notes' => new \PHPFUI\ORM\FieldDefinition('longtext', 'string', 4294967295, true, null, ),
				'order_date' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, false, null, ),
				'order_id' => new \PHPFUI\ORM\FieldDefinition('integer', 'int', 0, false, ),
				'order_status_id' => new \PHPFUI\ORM\FieldDefinition('integer', 'int', 0, true, 0, ),
				'order_tax_status_id' => new \PHPFUI\ORM\FieldDefinition('integer', 'int', 0, true, null, ),
				'paid_date' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, true, null, ),
				'payment_type' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, true, null, ),
				'ship_address' => new \PHPFUI\ORM\FieldDefinition('longtext', 'string', 4294967295, true, null, ),
				'ship_city' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, true, null, ),
				'ship_country_region' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, true, null, ),
				'ship_name' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, true, null, ),
				'ship_state_province' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, true, null, ),
				'ship_zip_postal_code' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, true, null, ),
				'shipped_date' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, true, null, ),
				'shipper_id' => new \PHPFUI\ORM\FieldDefinition('integer', 'int', 0, true, null, ),
				'shipping_fee' => new \PHPFUI\ORM\FieldDefinition('decimal(19,4)', 'float', 19, true, 0.0000, ),
				'tax_rate' => new \PHPFUI\ORM\FieldDefinition('double', 'float', 0, true, 0, ),
				'taxes' => new \PHPFUI\ORM\FieldDefinition('decimal(19,4)', 'float', 19, true, 0.0000, ),
			];
			}

		return $this;
		}
	}
